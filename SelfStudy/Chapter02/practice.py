# 練習問題 2.2

## 1. Python で利用可能な組み込み型を 3 つ上げよ。
### 整数型 - int
### 論理型 - bool
### 文字列型 - str

## 2. 以下の記法を利用し、リテラルを表現せよ。
### 2-1. 16 進数リテラル

a = 0xff

print(a)

### 2-2. 数値セパレーター

b = 12_34_567

print(b)

### 2-3. エスケープシーケンスによる改行を含んだ文字列

print('ここは、\nスペース')

### 2-4. 指数表現

c = 1.43e567

print(c)

### 2-5. raw 文字列

print(r'\Windows')



# この章の理解度チェック
## 1. 空欄を埋めよ。

### n 進数
### 10 進数のほか、2、8、16 進数を表現可。接頭辞は 0b (2 進数)、<0o> (8 進数)、<0x> (16 進数)

### 指数表現
### 非常に大きな (小さな) 数値を表すために利用。<仮数部>e<符号><指数部> の形式。

### <エスケープシーケンス>
### 改行やタブ文字など特別な意味を持つ文字を表すために利用。タブは <\t> で表す。

### フォーマット文字列
### 文字列リテラルの一種で、<{...}> の形式で変数/式を埋め込む。文字列リテラルの先頭に <f/F>  をつけて表す。


## 2. 以下のリストで間違っているポイントを 3 つ挙げよ。
### str msg = こんにちは、Python
### Print(msg)

### (1) Print ではだめ。大文字/小文字を区別できてしまうので
### (2) 変数に代入する時は '' が必要
### (3) str の記入は必要ない


## 3. 正しいもには ◯、間違っているものには x を記入せよ。
### (x) 論理型 (bool) では True/False/None の 3 つの状態で表現できる。
    ### → 論理型は True/False のみなので。
### (x) raw 文字列を利用することで、えすケースシーケンスを使わなくても改行付き文字列を表現できる。
    ### → 複数行文字列は「'''」か「"""」を使う。
### (x) 識別子は、英数字とアルファベットだけを利用できる。
    ### → Unicode 文字も利用できる。
### (x) リストは以下の要素は全て同じデータ型でなければならない。
### (◯) リストでは、先頭の要素を 0 番目と数える。


## 4. コードを実際に作成せよ。
### 4-1. 宣言済みの変数 name を破棄

name = 'seina'
del name

### 4-2. 「みかん」「かき」「りんご」をタグ区切りで表した文字列 txt (エスケープシーケンスを利用せよ)

print('みかん\tかき\tりんご')

### >>> print('みかん\tかき\tりんご')
### みかん  かき    りんご

### 4-3. 2 個のリスト (「あ」~「お」、「か」~「こ」) を持つリスト data

data = [
    ['あ','い','う','え',',お'],
    ['か','き','く','け','こ'],
]

print(data[1][1])  # 結果 = き

### >>> print(data[1][1])
### き

### 4-4. 変数 name をもとに、「こんにちは、◯◯ さん」という文字列を生成し、表示

name = 'Seina'
print(f'こんにちは、{name} さん')

### >>> print(f'こんにちは、{name} さん')
### こんにちは、Seina さん

### 4-5. 5 この要素リスト data から末尾の要素を取得し、表示

data = ['a','b','c','d','e']

print(data[4])

### >>> print(data[4])
### e