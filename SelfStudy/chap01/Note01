【 マシン言語 vs. 高級言語 】
・　マシン言語 = コンピューターが直接理解できる言語 (0,1)
・　高級言語 = プログラミング言語。人間が理解できる言語だが、コンピューターは理解できない。(e.g. Python)

【 コンパイル言語 vs. インタープリンター言語 】
・　コンパイル言語 = 高級言語をコンパイル (翻訳) し、その結果を実行すること
・　インタープリンター言語 = コンパイルを意識する必要のないこと。プログラムを呼び出すとその場で翻訳しながら実行してくれる。(e.g. Python)

【 ソースコード vs. 実行形式 】
・　ソースコード/コード = コンパイル前の人間によって書かれたプログラムのこと
・　実行形式 = コンパイル後の実行できる状態になったプログラムのこと

【 スクリプト 】
コンピューターに指示をするためのプログラム

【 オブジェクト指向言語 】
・　プログラムの中で扱う対象を「オブジェクト」という。
・　例: 文字列を入力するためのテキストボックス

【 ライブラリ 】
・　プログラミング言語のみではなくアプリ開発のための道具も提供しているもの
・　例: Python をインストールすると PyPl がある

【 Python 】
・　Numpy = 数値計算用ライブラリ
・　pandas = データ解析ライブラリ
・　TensorFlow = 機械学習ライブラリ
・　Django = Web アプリ開発のためのフレームワーク
・　Scrapy = Web クローンフレームワーク

【 Python ディストリビューション 】
特定の用途に合わせた機能を追加したパッケージのこと

【 コードエディター 】
コードを編集するためのもの

【 PythonShell 】
コンソール上で入力したコマンドをその場で実行すること

【 文字コード vs. 文字エンコード 】
・　文字コード = 各文字に割り当てられたコードのこと (e.g. 3042 = 'あ')
    ・　JIS = 電子メールで使われる文字コード
    ・　Unicode = UTF-8/UTF-16。世界各国で使われる文字を 1 つにまとめた文字コード
・　文字エンコーディング = 実際の文字と文字コードとの対応関係のこと

【 文字化け 】
・　データを受け取る側と渡す側で想定している文字コードが違う時に発生するもの
・　e.g. UTF-8 では "3042 = あ" だが、JIS では "820A = あ" である




---------------------------------------------------------------------------------

## PythonShell を呼び出す
```
$ python3

>>>
```

## PythonShell を終了する
```
>>> exit()
```

## コメント
print \ # ここにはコメントできない
(name) # ここにはコメントできる

## 複数行のコメント
'''
ここはコメントになる。
複数行作成しても大丈夫
'''